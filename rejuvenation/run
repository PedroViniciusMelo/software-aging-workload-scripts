#!/bin/bash
#vari√°veis de controle

reboot_time=0
memory_maximum=0
is_predicted=0
memtotal=0

function reboot_machine() {
  echo "Machine will reboot after $1 minutes"
  shutdown -r "$1"
}

function soft_kill_virtualbox() {
  if (awk -v n1="$memory_maximum" -v n2="$memtotal" 'BEGIN {print (n1<=n2)}'); then
    echo "Memory exceeded, executing Soft kill for VirtualBox process"
    vboxmanage controlvm vmDebian reset -d
  fi
}

function predict_method() {
  echo "predict method"
}

function is_number() {
  local re='^[0-9]+$'
  if ! [[ $1 =~ $re ]]; then
    return 1
  fi
  return 0
}

function print_usage() {
  echo "script usage $(basename "$0")  [-s <integer>] [-k <integer>] [-p]" >&2
}

if [[ "$1" =~ ^((-{1,2})([Hh]$|[Hh][Ee][Ll][Pp])|)$ ]]; then
  print_usage
  exit 1
else
  while [[ $# -gt 0 ]]; do
    opt="$1"
    shift
    current_arg="$1"
    if [[ "$current_arg" =~ ^-{1,2}.* ]]; then
      echo "WARNING: You may have left an argument blank. Double-check your command."
    fi
    case "$opt" in
    "-r" | "--reboot")
      reboot_time="$1"
      shift
      ;;
    "-m" | "--memory")
      memory_maximum="$1"
      shift
      ;;
    "-p" | "--predicted")
      is_predicted="$1"
      shift
      ;;
    *)
      echo "ERROR: Invalid option: \"$opt\"" >&2
      exit 1
      ;;
    esac
  done
fi

#if [[ "$APPLE" == "" || "$BANANA" == "" ]]; then
#    echo "ERROR: Options -a and -b require arguments." >&2
#    exit 1
#fi

if [ "$reboot_time" -gt 0 ]; then
  reboot_machine "$reboot_time"
fi

while true; do
  :
  source monitoramento-VBoxXPCOMIPCD.sh
  source monitoramento-VBoxHeadless.sh
  source monitoramento-VBoxXPCOMIPCD.sh
  if [ "$memory_maximum" -gt 0 ]; then
    soft_kill_virtualbox
  fi
  if [ "$is_predicted" -gt 0 ]; then
    predict_method
  fi
  memtotal=0
  sleep 2
done
